plugins {
    id 'com.android.application'
    id "io.sentry.android.gradle"
    id "io.sentry.kotlin.compiler.gradle"
    id 'org.jetbrains.kotlin.android'
    id 'com.google.dagger.hilt.android'
    id 'com.google.protobuf'
    id 'io.gitlab.arturbosch.detekt'
    id 'com.google.devtools.ksp'
    id 'app.cash.paparazzi'
    id 'kotlin-parcelize'
}

// Best articles about this:
// - [https://stefma.medium.com/sourcecompatibility-targetcompatibility-and-jvm-toolchains-in-gradle-explained-d2c17c8cff7c]
// - [https://developer.android.com/build/jdks#source-compat]
kotlin {
    jvmToolchain(17)
}

android {
    namespace 'ir.erfansn.nsmavpn'
    compileSdk 34

    defaultConfig {
        applicationId 'ir.erfansn.nsmavpn'
        minSdk 23
        targetSdk 34
        versionCode 1
        // TODO: Change to Calender versioning
        versionName '1.0'

        testInstrumentationRunner 'ir.erfansn.nsmavpn.HiltTestRunner'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }

    androidResources {
        generateLocaleConfig = true
    }

    buildFeatures {
        compose true
        buildConfig true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.11'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1,DEPENDENCIES}'
            excludes += '/mozilla/public-suffix-list.txt'
        }
    }
    kotlinOptions {
        freeCompilerArgs += ['-Xcontext-receivers']
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {
    def composeBom = platform('androidx.compose:compose-bom:2024.02.02')
    implementation composeBom
    implementation 'androidx.compose.material3:material3'
    implementation 'androidx.compose.material3:material3-window-size-class'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'

    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-compose:2.7.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.7.0'
    implementation 'androidx.activity:activity-compose:1.8.2'
    implementation 'androidx.startup:startup-runtime:1.1.1'
    implementation 'androidx.core:core-splashscreen:1.0.1'
    implementation 'androidx.constraintlayout:constraintlayout-compose:1.0.1'
    implementation 'androidx.documentfile:documentfile:1.0.1'
    implementation 'androidx.navigation:navigation-compose:2.7.7'
    implementation 'androidx.work:work-runtime-ktx:2.9.0'
    implementation 'androidx.appcompat:appcompat:1.7.0-alpha03'

    def androidx_hilt_version = '1.1.0'
    implementation "androidx.hilt:hilt-work:$androidx_hilt_version"
    implementation "androidx.hilt:hilt-navigation-compose:$androidx_hilt_version"
    ksp "androidx.hilt:hilt-compiler:$androidx_hilt_version"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    ksp "com.google.dagger:hilt-compiler:$hilt_version"

    implementation 'com.google.accompanist:accompanist-drawablepainter:0.34.0'

    implementation 'androidx.datastore:datastore:1.0.0'
    implementation 'com.google.protobuf:protobuf-javalite:3.25.3'
    implementation 'com.google.protobuf:protobuf-kotlin-lite:3.25.3'

    implementation 'com.google.android.gms:play-services-auth:21.0.0'
    implementation 'com.google.api-client:google-api-client:2.2.0'
    implementation 'com.google.api-client:google-api-client-android:2.2.0'
    implementation 'com.google.apis:google-api-services-gmail:v1-rev20231106-2.0.0'

    implementation "it.skrape:skrapeit:1.2.2"
    def coil_version = "2.6.0"
    implementation "io.coil-kt:coil-compose:$coil_version"
    implementation 'com.github.sebaslogen.resaca:resaca:3.0.0'
    implementation "io.github.reactivecircus.cache4k:cache4k:0.13.0"
    implementation "com.squareup.okhttp3:okhttp:4.12.0"
    implementation "androidx.tracing:tracing:1.2.0"

    testImplementation composeBom
    testImplementation 'junit:junit:4.13.2'
    testImplementation "com.google.truth:truth:1.1.5"
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.11.0'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.8.0'
    testImplementation "io.coil-kt:coil-test:$coil_version"
    testImplementation 'org.robolectric:robolectric:4.11.1'

    androidTestImplementation composeBom
    androidTestImplementation 'com.squareup.okhttp3:mockwebserver:4.11.0'
    androidTestImplementation "androidx.navigation:navigation-testing:2.7.7"
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.ext:truth:1.5.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.0-alpha03'
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    detektPlugins 'io.nlopez.compose.rules:detekt:0.3.8'
}

androidComponents {
    registerSourceType("proto")

    // Temporarily solution about problem with generated classes of Protobuf [https://github.com/google/ksp/issues/1590]
    onVariants(selector().all(), { variant ->
        afterEvaluate {
            def capName = variant.name.capitalize()
            tasks.getByName("ksp${capName}Kotlin") {
                setSource(tasks.getByName("generate${capName}Proto").outputs)
            }
        }
    })
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.25.3'
    }

    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
                kotlin {
                    option 'lite'
                }
            }
        }
    }
}

detekt {
    config.setFrom("$rootDir/detekt/config.yml")
}
